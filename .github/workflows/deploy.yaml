name: Deploy Infra + React App

on:
  push:
    branches:
      - dev
      - qa
      - stg
      - prd
  pull_request:
    branches: [ dev, qa, stg, prd ]

permissions:
  id-token: write
  contents: read
  
jobs:

  infra:
    name: Infrastructure 
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}


    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: my-app/infra

      - name: Select/Create Workspace
        run: |
          ENV=${GITHUB_REF##*/}
          terraform workspace select $ENV || terraform workspace new $ENV
        working-directory: my-app/infra
      - name: Enable TF Debug
        run: echo "TF_LOG=DEBUG" >> $GITHUB_ENV

      - name: Terraform Validate
        if: github.event_name == 'pull_request'
        run: terraform validate
        working-directory: my-app/infra

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        run: terraform plan -out=tfplan
        working-directory: my-app/infra

      - name: Save Terraform Plan Output
        if: github.event_name == 'pull_request'
        run: terraform show -no-color tfplan > plan.txt
        working-directory: my-app/infra

      - name: Comment PR with Terraform Plan
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('my-app/infra/plan.txt', 'utf8');
            const issue_number = context.payload.pull_request.number;
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number,
              body: `###  Terraform Plan\n\`\`\`\n${plan}\n\`\`\``
            });

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: my-app/infra
      

  deploy:
    name: Deploy React App
    runs-on: ubuntu-latest
    needs: infra

  
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm ci
        working-directory: my-app

      - name: Build React App
        run: npm run build
        working-directory: my-app

      - name: Deploy React App
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "my-app"
          output_location: "build"

