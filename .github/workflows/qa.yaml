name: Deploy qa

on:
  push:
    branches: [ qa ]
  pull_request:
    branches: [ qa ]
    types: [opened, synchronize, reopened, closed]

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


  build:
    name: Build App
    runs-on: ubuntu-latest
    outputs:
      build-path: ${{ steps.build.outputs.output-path }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm ci
        working-directory: my-app

      - name: Build
        id: build
        run: |
          npm run build
          echo "output-path=my-app/build" >> $GITHUB_OUTPUT
        working-directory: my-app

  deploy:
    name: Deploy to qa
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: qa 
    steps:
      - uses: actions/checkout@v3

      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "my-app"
          output_location: "build"
